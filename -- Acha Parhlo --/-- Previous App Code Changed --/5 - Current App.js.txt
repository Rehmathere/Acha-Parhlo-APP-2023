import React, { useState, useEffect } from "react";
import { createStackNavigator } from "@react-navigation/stack";
import { createDrawerNavigator, DrawerItemList } from "@react-navigation/drawer";
import { SafeAreaView, View, Image } from "react-native";
import { FontAwesome, FontAwesome5, Ionicons, MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';
import { useFonts } from "expo-font";
import { firebase } from "./component/firestore";
import { NavigationContainer } from "@react-navigation/native"; // Moved from DrawerNavigation
import Login from "./component/Authentication/Login";
import Registration from "./component/Authentication/Registration";
import Dashboard from "./component/Authentication/Dashboard";
import MyHeader from "./component/Authentication/MyHeader";
import ForgetPass from "./component/Authentication/ForgetPass";
import Rate from './component/DrawerOption/RateUs/Rate';
import Faqs from './component/DrawerOption/Faqs/MainFaqs';
import Profile from "./component/DrawerOption/Profile/Profile";
import Logout from "./component/DrawerOption/Logout/Logout";
import WishList from "./component/DrawerOption/Wishlist/WishList";
import Drawer from "./component/DrawerOption/Drawer";
import ApplicationList from "./component/Application/ApplicationList";
import ApplicationStatus from "./component/Application/ApplicationStatus";

const Stack = createStackNavigator();
const AppDrawer = createDrawerNavigator();

function App() {
  const [fontsLoaded, setFontsLoaded] = useState(false);
  let [loaded] = useFonts({
    Archivo: require("./assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
    Kanit: require("./assets/fonts/My_Soul/Kanit-Light.ttf"),
    Heebo: require("./assets/fonts/My_Soul/Heebo-Medium.ttf"),
    HeeboExtra: require("./assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
    KanitBold: require("./assets/fonts/My_Soul/Kanit-Bold.ttf"),
    KanitBlack: require("./assets/fonts/My_Soul/Kanit-Black.ttf"),
  });

  useEffect(() => {
    if (loaded) {
      setFontsLoaded(true);
    }
  }, [loaded]);

  const [initializing, setInitializing] = useState(true);
  const [user, setUser] = useState();

  function onAuthStateChanged(user) {
    setUser(user);
    if (initializing) setInitializing(false);
  }

  useEffect(() => {
    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);
    return subscriber;
  }, []);

  if (initializing) return null;

  if (!fontsLoaded) {
    return null;
  }

  if (!user) {
    return (
      <Stack.Navigator>
        {/* 1 - Authentication */}
        <Stack.Screen
          name="Login"
          component={Login}
          options={{
            headerTitle: () => <MyHeader />,
            headerStyle: {
              height: 155,
              borderBottomLeftRadius: 1000,
              borderBottomRightRadius: 1000,
              backgroundColor: "#EB2F06",
              shadowColor: "red",
              elevation: 25,
            },
            headerBackgroundContainerStyle: {
              backgroundColor: "white",
            }
          }}
        />
        <Stack.Screen
          name="Registration"
          component={Registration}
          options={{
            headerTitle: () => <MyHeader />,
            headerStyle: {
              height: 150,
              borderBottomLeftRadius: 1000,
              borderBottomRightRadius: 1000,
              backgroundColor: "#EB2F06",
              shadowColor: "red",
              elevation: 25,
            },
            headerLeft: null,
            headerBackgroundContainerStyle: {
              backgroundColor: "white",
            }
          }}
        />
        <Stack.Screen
          name="ForgetPass"
          component={ForgetPass}
          options={{
            headerTitle: "Forget Password",
            headerTitleStyle: {
              fontFamily: "Heebo",
              color: "white",
              letterSpacing: 0.7,
            },
            headerPressColor: "white",
            headerStyle: {
              backgroundColor: "#EB2F06",
            },
            headerTintColor: "white",
          }}
        />
      </Stack.Navigator>
    );
  }

  return (
    <AppDrawer.Navigator
      initialRouteName="MyDrawer"
      drawerContent={(props) => (
        <SafeAreaView>
          <View style={{
            height: 200,
            width: "100%",
            justifyContent: "center",
            alignItems: "center",
            borderBottomColor: "#EB2F06",
            borderBottomWidth: 1,
            backgroundColor: "#EB2F06",
            marginBottom: 20,
          }}>
            <Image
              source={require("./component/Pics/User.png")}
              style={{
                height: 130,
                width: 130,
                borderRadius: 65,
                borderWidth: 5,
                borderColor: "#E2DEDE",
              }}
            />
          </View>
          <DrawerItemList {...props} />
        </SafeAreaView>
      )}
      screenOptions={{
        drawerStyle: {
          backgroundColor: "white",
          width: 250,
        },
        headerTitle: "Home",
        headerStyle: {
          backgroundColor: "#EB2F06",
        },
        headerTintColor: "white",
        headerTitleStyle: {
          fontFamily: "Heebo",
          letterSpacing: 1.9,
        },
        drawerActiveTintColor: "red",
        drawerLabelStyle: {
          color: "black",
          fontSize: 16,
          fontFamily: "Kanit",
          letterSpacing: 0.5,
        },
      }}
    >
      <AppDrawer.Screen
        name="MyDrawer"
        component={Drawer}
        options={{
          drawerLabel: "Dashboard",
          headerPressColor: "#EB2F06",
          headerStyle: {
            backgroundColor: "white",
          },
          headerTintColor: "#EB2F06",
          title: "My_Drawer",
          headerTitle: " ",
          headerTitleStyle: {
            fontFamily: "Kanit",
            letterSpacing: 2,
          },
          drawerIcon: () => (
            <FontAwesome name="home" size={21} color="#EA2027" style={{ marginLeft: 2 }} />
          )
        }}
      />
      <AppDrawer.Screen
        name="Profile"
        component={Profile}
        options={{
          drawerLabel: "Edit Profile",
          headerTitle: "Edit Profile",
          drawerIcon: () => (
            <FontAwesome5 name="user-edit" size={18} color="#EA2027" style={{ marginLeft: 2 }} />
          )
        }}
      />
      <AppDrawer.Screen
        name="Wishlist"
        component={WishList}
        options={{
          drawerLabel: "Wishlist",
          headerTitle: "My Wishlist",
          drawerIcon: () => (
            <MaterialCommunityIcons name="heart-box" size={27} color="#EA2027" />
          )
        }}
      />
      <AppDrawer.Screen
        name="Faqs"
        component={Faqs}
        options={{
          drawerLabel: "FAQ's",
          headerTitle: "FAQ's",
          drawerIcon: () => (
            <Ionicons name="ios-help-circle" size={27} color="#EA2027" />
          )
        }}
      />
      <AppDrawer.Screen
        name="Rate"
        component={Rate}
        options={{
          drawerLabel: "Rate Us",
          headerTitle: "Rate Us",
          drawerIcon: () => (
            <MaterialIcons name="star-rate" size={28} color="#EA2027" />
          )
        }}
      />
      <AppDrawer.Screen
        name="Logout"
        component={Logout}
        options={{
          drawerLabel: "Logout",
          headerTitle: "Logout",
          drawerIcon: () => (
            <MaterialCommunityIcons name="logout" size={29} color="#EA2027" style={{ marginLeft: 2 }} />
          )
        }}
      />
      {/* --------- 1 - Application Tracking --------- */}
      <AppDrawer.Screen
        name="ApplicationList"
        component={ApplicationList}
        options={{
          drawerLabel: () => null,
          drawerIcon: () => null,
          title: null,
        }}
      />
      <AppDrawer.Screen
        name='ApplicationStatus'
        component={ApplicationStatus}
        options={{
          drawerLabel: () => null,
          drawerIcon: () => null,
          title: null,
        }}
      />
    </AppDrawer.Navigator>
  );
}

export default () => {
  return (
    <NavigationContainer>
      <App />
    </NavigationContainer>
  );
};
