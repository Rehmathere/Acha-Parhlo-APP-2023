--------------- Z_Test_Parent_A.js ---------------

import React from 'react'
import { Text, View, StyleSheet, TouchableOpacity } from 'react-native'
// Files
import Z_Test_1_A from './Z_Test_1_A'
import Z_Test_2_A from './Z_Test_2_A'
// Navigation
import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
import Z_Test_3_A from './Z_Test_3_A';

// Constant Variable
const Stack = createStackNavigator();

export default function Z_Test_Parent_A() {
    // Main Body
    return (
        <NavigationContainer>
            <Stack.Navigator>
                {/* 1 */}
                <Stack.Screen component={Z_Test_1_A} name="Z_Test_1_A"
                    options={{ headerShown: false }} />
                {/* 2 */}
                <Stack.Screen component={Z_Test_2_A} name="Z_Test_2_A"
                    options={{ headerShown: false }} />
                {/* 3 */}
                <Stack.Screen component={Z_Test_3_A} name="Z_Test_3_A"
                    options={{ headerShown: false }} />
            </Stack.Navigator>
        </NavigationContainer>
    )
}

--------------- Z_Test_1_A.js ---------------

import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput, Keyboard } from 'react-native';
import { firebase } from "../firestore";
import { useNavigation } from '@react-navigation/native';
import { useFonts } from "expo-font";

export default function Z_Test_1() {
    // Navigation
    const navigation = useNavigation();
    // ------------- Backend Logic Part -------------
    const todoRef = firebase.firestore().collection("Practice App");
    const [name, setName] = useState("");
    const [email, setEmail] = useState(""); // New state for Email
    const [contactNo, setContactNo] = useState(""); // New state for Contact No
    // Function 
    const addField = () => {
        if (name && name.length > 0 && email && contactNo) {
            const data = {
                value_1: name,
                value_2: email, // Include email in the data object
                value_3: contactNo, // Include contactNo in the data object
            };
            todoRef
                .add(data)
                .then(() => {
                    setName("");
                    setEmail(""); // Reset email state
                    setContactNo(""); // Reset contactNo state
                    Keyboard.dismiss();
                })
                .catch((err) => {
                    alert(err);
                });
        }
    };
    // ------------- Backend Logic Part -------------
    // ----- Fonts -----
    const [fontsLoaded, setFontsLoaded] = useState(false);
    let [loaded] = useFonts({
        Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
        Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
        Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
        HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
        KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
        KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
    });
    useEffect(() => {
        if (loaded) {
            setFontsLoaded(true);
        }
    }, [loaded]);
    if (!fontsLoaded) {
        return null;
    }
    // Main Body
    return (
        <View>
            <Text style={styles.Txt1}>Appointment Detail's</Text>
            {/* Text Input */}
            <Text style={styles.Detail_Txt}>Name :</Text>
            <TextInput
                placeholder=' Enter Name '
                onChangeText={(heading) => setName(heading)}
                value={name}
                style={styles.Inp_1}
                keyboardType="default"
            />
            {/* Text Input */}
            <Text style={styles.Detail_Txt}>Email :</Text>
            <TextInput
                placeholder=' Enter Email '
                onChangeText={(email) => setEmail(email)}
                value={email}
                style={styles.Inp_1}
                keyboardType="email-address"
            />
            {/* Text Input */}
            <Text style={styles.Detail_Txt}>Contact No :</Text>
            <TextInput
                placeholder=' Enter Contact No'
                onChangeText={(contactNo) => setContactNo(contactNo)}
                value={contactNo}
                style={styles.Inp_1}
                keyboardType="phone-pad"
            />
            {/* Button */}
            <TouchableOpacity style={styles.Btn_Parent} onPress={addField}>
                <Text style={styles.Btn_Txt}>Book Appointment</Text>
            </TouchableOpacity>
        </View>
    );
};

// CSS
const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
    },
    Txt1: {
        borderWidth: 1,
        borderColor: "yellow",
        backgroundColor: "yellow",
        fontFamily: "KanitBold",
        paddingHorizontal: 10,
        paddingVertical: 10,
        textAlign: "center",
        letterSpacing: 1.5,
        fontSize: 20,
        marginVertical: 15,
    },
    Detail_Txt: {
        marginTop: 15,
        // borderWidth: 0.5,
        paddingHorizontal: 25,
        fontFamily: "Heebo",
        fontSize: 13,
        letterSpacing: 1,
    },
    Inp_1: {
        marginTop: 5,
        borderWidth: 0.5,
        borderColor: "black",
        paddingVertical: 5,
        marginHorizontal: 25,
        borderRadius: 8,
        paddingHorizontal: 10,
        letterSpacing: 2,
        fontSize: 15,
        fontFamily: "Kanit",
    },
    Btn_Parent: {
        paddingVertical: 10,
        backgroundColor: "red",
        marginVertical: 30,
        marginHorizontal: 15,
        borderRadius: 20,
    },
    Btn_Txt: {
        paddingVertical: 1,
        textAlign: "center",
        fontFamily: "HeeboExtra",
        fontSize: 16,
        color: "white",
        letterSpacing: 1,
    },
});

-----------------------------------------------------------------