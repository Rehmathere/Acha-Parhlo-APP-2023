------------------- App.js ------------------- 

import React, { useState, useEffect } from "react";
import { Text, Button, View, TextInput, StyleSheet } from "react-native";
// import @ React
import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
// Firebase Import File
import { firebase } from "./component/firestore";
// Importing Components
import Login from "./component/Login";
import Registration from "./component/Registration";
import Dashboard from "./component/Dashboard";
import Header from "./component/Header";
// Import Stack
// import { Stack } from "@react-navigation/stack";

// Constant
const Stack = createStackNavigator();

function App() {
  // 1 - useState
  const [initializing, setInitializing] = useState(true);
  const [user, setUser] = useState();
  // 2 - Handle User State Change
  function onAuthStateChanged(user) {
    setUser(user);
    if (initializing) setInitializing(false);
  }
  // 3 - useEffect
  useEffect(() => {
    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);
    return subscriber;
  }, []);
  // 4 - If Condition
  if (initializing) return null;
  // 5 - ! User
  if (!user) {
    return (
      <Stack.Navigator>
        {/* 1 */}
        <Stack.Screen
          name="Login"
          component={Login}
          options={{
            headerTitle: () => <Header name="Login" />,
            headerStyle: {
              height: 110,
              borderBottomLeftRadius: 50,
              borderBottomRightRadius: 50,
              backgroundColor: "orange",
              shadowColor: "red",
              elevation: 25,
            },
          }}
        />
        {/* 2 */}
        <Stack.Screen
          name="Registration"
          component={Registration}
          options={{
            headerTitle: () => <Header name="Registration" />,
            headerStyle: {
              height: 100,
              borderBottomLeftRadius: 50,
              borderBottomRightRadius: 50,
              backgroundColor: "orange",
              shadowColor: "red",
              elevation: 25,
            },
          }}
        />
      </Stack.Navigator>
    );
  }
  // 6 - Dashboard
  return (
    <Stack.Navigator>
      {/* 1 */}
      <Stack.Screen
        name="Dashboard"
        component={Dashboard}
        options={{
          headerTitle: () => <Header name="Dashboard" />,
          headerStyle: {
            height: 100,
            borderBottomLeftRadius: 50,
            borderBottomRightRadius: 50,
            backgroundColor: "orange",
            shadowColor: "red",
            elevation: 25,
          },
        }}
      />
    </Stack.Navigator>
  );
}
// Main Start
export default () => {
  // Main Body
  return (
    <NavigationContainer>
      <App />
    </NavigationContainer>
  );
};

------------------- Login.js ------------------- 

import React, { useState, useEffect } from "react";
import {
  View,
  Text,
  StyleSheet,
  Button,
  StatusBar,
  TextInput,
  TouchableOpacity,
} from "react-native";
// Import Extra
import { useNavigation } from "@react-navigation/native";
import { firebase } from "./firestore";

export default function Login() {
  const navigation = useNavigation();
  // useState
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  // Function
  loginUser = async (email, password) => {
    try {
      await firebase.auth().signInWithEmailAndPassword(email, password);
    } catch (error) {
      alert(error.message);
    }
  };
  // Change Password
  const forgetPassword = () => {
    firebase
      .auth()
      .sendPasswordResetEmail(email)
      .then(() => {
        alert(" Password Reset Email Sent ");
      })
      .catch((error) => {
        alert(error);
      });
  };

  // Main Body
  return (
    <View style={styles.container}>
      <StatusBar backgroundColor={"red"} />
      <Text style={styles.fir}>Login Form</Text>
      {/* TextInput 1 */}
      <TextInput
        style={styles.sec}
        placeholder=" Enter Email "
        onChangeText={(email) => setEmail(email)}
        autoCapitalize="none"
        autoCorrect={false}
      />
      {/* TextInput 1 */}
      <TextInput
        style={styles.sec}
        placeholder=" Enter Password "
        onChangeText={(password) => setPassword(password)}
        autoCapitalize="none"
        autoCorrect={false}
        secureTextEntry={true}
      />
      {/* Change Password */}
      <View style={styles.passView}>
        <TouchableOpacity
          onPress={() => {forgetPassword()}}
          style={styles.pass}
        >
          <Text style={styles.passTxt}>Forget Password</Text>
        </TouchableOpacity>
      </View>
      {/* Button 1 */}
      <TouchableOpacity
        onPress={() => loginUser(email, password)}
        style={[styles.but, styles.but_1]}
      >
        <Text
          style={{
            fontWeight: "bold",
            fontSize: 15,
            textAlign: "center",
            color: "white",
          }}
        >
          LOGIN
        </Text>
      </TouchableOpacity>
      {/* Button 2 */}
      <TouchableOpacity
        onPress={() => navigation.navigate("Registration")}
        style={[styles.but, styles.but_2]}
      >
        <Text
          style={{
            fontWeight: "bold",
            fontSize: 15,
            textAlign: "center",
            color: "white",
          }}
        >
          Don't Have An Account ? Register Now
        </Text>
      </TouchableOpacity>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "white",
    paddingHorizontal: 15,
  },
  fir: {
    borderColor: "white",
    borderWidth: 1,
    color: "black",
    fontSize: 30,
    marginTop: 3,
    marginBottom: 50,
    backgroundColor: "white",
    textAlign: "center",
    fontWeight: "bold",
  },
  sec: {
    borderColor: "black",
    backgroundColor: "white",
    borderWidth: 1,
    color: "black",
    fontSize: 18,
    marginTop: 5,
    marginBottom: 10,
    paddingHorizontal: 10,
    paddingVertical: 5,
    fontWeight: "bold",
  },
  but: {
    color: "white",
    fontSize: 18,
    marginTop: 10,
    borderRadius: 50,
    marginBottom: 10,
    paddingHorizontal: 20,
    paddingVertical: 5,
    fontWeight: "bold",
  },
  but_1: {
    borderColor: "blue",
    backgroundColor: "blue",
    borderWidth: 1,
  },
  but_2: {
    borderColor: "red",
    backgroundColor: "red",
    borderWidth: 1,
  },
  passView: {
    borderColor: "transparent",
    borderWidth: 1,
    paddingVertical: 1,
    alignItems: "flex-end",
  },
  pass: {
    borderRadius: 20,
    backgroundColor: "black",
    width: "43%",
    paddingVertical: 1,
    paddingHorizontal: 8,
    borderWidth: 1,
    borderColor: "black",
  },
  passTxt: {
    color: "white",
    fontWeight: "bold",
    fontSize: 16,
  },
});

------------------- Dashboard.js ---------------- 

import React, { useState, useEffect } from "react";
import {
  View,
  Text,
  StyleSheet,
  SafeAreaView,
  TouchableOpacity,
} from "react-native";
import { firebase } from "./firestore";

export default function Dashboard() {
  // useState
  const [name, setName] = useState("");
  // Change Password
  const changePassword = () => {
    firebase.auth().sendPasswordResetEmail(firebase.auth().currentUser.email)
    .then(() => {
      alert(" Password Reset Email Sent ")
    }).catch((error) => {
      alert(error)
    })
  }
  // useEffect
  useEffect(() => {
    firebase
      .firestore()
      .collection("users")
      .doc(firebase.auth().currentUser.uid)
      .get()
      .then((snapshot) => {
        if (snapshot.exist) {
          setName(snapshot.data);
        } else {
          console.log(" User Does Not Exist ");
        }
      });
  }, []);
  // Main Body
  return (
    <SafeAreaView style={styles.container}>
      <Text style={styles.fir}>Hello, {name.firstName}</Text>
      {/* Button 1 */}
      <TouchableOpacity
        onPress={() => {firebase.auth().signOut()}}
        style={[styles.but, styles.but_1]}
      >
        <Text
          style={{
            fontWeight: "bold",
            fontSize: 20,
            textAlign: "center",
            color: "white",
          }}
        >
          LOGOUT
        </Text>
      </TouchableOpacity>
      {/* Button 2 */}
      <TouchableOpacity
        onPress={() => {changePassword()}}
        style={[styles.but, styles.but_1]}
      >
        <Text
          style={{
            fontWeight: "bold",
            fontSize: 20,
            textAlign: "center",
            color: "white",
          }}
        >
          Change Password
        </Text>
      </TouchableOpacity>
    </SafeAreaView>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "white",
    paddingHorizontal: 15,
  },
  fir: {
    borderColor: "white",
    borderWidth: 1,
    backgroundColor: "white",
    color: "black",
    fontSize: 40,
    marginTop: 3,
    marginBottom: 40,
    textAlign: "center",
    fontWeight: "bold",
    textShadowColor: "black",
    textShadowRadius: 15,
  },
  but: {
    color: "white",
    fontSize: 18,
    marginTop: 10,
    borderRadius: 50,
    marginBottom: 10,
    paddingHorizontal: 20,
    paddingVertical: 5,
    fontWeight: "bold",
  },
  but_1: {
    borderColor: "red",
    backgroundColor: "red",
    borderWidth: 1,
  },
});

------------------- Registration.js ------------- 

import React, { useState } from "react";
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  TextInput,
  Alert,
} from "react-native";
import { firebase } from "./firestore";

export default function Registration() {
  // useState
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  // Function
  registerUser = async (email, password, firstName, lastName) => {
    await firebase
      .auth()
      .createUserWithEmailAndPassword(email, password)
      .then(() => {
        firebase
          .auth()
          .currentUser.sendEmailVerification({
            handleCodeInApp: true,
            url: "awpro-f81b1.firebaseapp.com",
          })
          .then(() => {
            alert(" Verification Email Has Been Sent ");
          })
          .catch((error) => {
            alert(error.message);
          })
          .then(() => {
            firebase
              .firestore()
              .collection("users")
              .doc(firebase.auth().currentUser.uid)
              .set({
                firstName,
                lastName,
                email,
              });
          })
          .catch((error) => {
            alert(error.message);
          });
      });
  };
  // Main Body
  return (
    <View style={styles.container}>
      <Text style={styles.fir}>Registered Here</Text>
      {/* TextInput 1 */}
      <TextInput
        style={styles.sec}
        placeholder=" Enter First Name "
        onChangeText={(firstName) => setFirstName(firstName)}
        autoCorrect={false}
      />
      {/* TextInput 2 */}
      <TextInput
        style={styles.sec}
        placeholder=" Enter Last Name "
        onChangeText={(lastName) => setLastName(lastName)}
        autoCorrect={false}
      />
      {/* TextInput 3 */}
      <TextInput
        style={styles.sec}
        placeholder=" Enter Email "
        onChangeText={(email) => setEmail(email)}
        autoCapitalize="none"
        autoCorrect={false}
        keyboardType="email-address"
      />
      {/* TextInput 4 */}
      <TextInput
        style={styles.sec}
        placeholder=" Enter Password "
        onChangeText={(password) => setPassword(password)}
        autoCapitalize="none"
        autoCorrect={false}
        secureTextEntry={true}
      />
      {/* Button 1 */}
      <TouchableOpacity
        onPress={() => registerUser(email,password,firstName,lastName)}
        style={[styles.but, styles.but_1]}
      >
        <Text
          style={{
            fontWeight: "bold",
            fontSize: 20,
            textAlign: "center",
            color: "white",
          }}
        >
          REGISTER
        </Text>
      </TouchableOpacity>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "white",
    paddingHorizontal: 15,
  },
  fir: {
    borderColor: "white",
    borderWidth: 1,
    color: "black",
    fontSize: 40,
    marginTop: 3,
    marginBottom: 40,
    textAlign: "center",
    fontWeight: "bold",
    textShadowColor: "red",
    textShadowRadius: 15,
  },
  sec: {
    borderColor: "black",
    backgroundColor: "white",
    borderWidth: 1,
    color: "black",
    fontSize: 18,
    marginTop: 5,
    marginBottom: 10,
    paddingHorizontal: 10,
    paddingVertical: 5,
    fontWeight: "bold",
  },
  but: {
    color: "white",
    fontSize: 18,
    marginTop: 10,
    borderRadius: 50,
    marginBottom: 10,
    paddingHorizontal: 20,
    paddingVertical: 5,
    fontWeight: "bold",
  },
  but_1:{
    borderColor: "orange",
    backgroundColor: "orange",
    borderWidth: 1,
  },
});

------------------- Header.js -------------------

import React from "react";
import { View, Text, StyleSheet } from "react-native";

export default function Header(props) {
  return (
    <View style={styles.container}>
      <Text style={styles.fir}>{props.name}</Text>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    marginLeft: 15,
  },
  fir: {
    borderColor: "orange",
    borderWidth: 1,
    color: "white",
    fontSize: 40,
    marginTop: 3,
    marginBottom: 30,
    textAlign: "center",
    fontWeight: "bold",
    textShadowColor: "black",
    textShadowRadius: 15,
  },
});

------------------- Firestore.js ---------------- 

// Header File
import firebase from 'firebase/compat/app'
import 'firebase/compat/auth'
import 'firebase/compat/firestore'

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyCpCthp0DyhjLpm5zbI5G1C_bCkY6Hqde8",
  authDomain: "awpro-f81b1.firebaseapp.com",
  databaseURL: "https://awpro-f81b1-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId: "awpro-f81b1",
  storageBucket: "awpro-f81b1.appspot.com",
  messagingSenderId: "313818198041",
  appId: "1:313818198041:web:b9e32aa1fc2bcc2c193a88"
};
// Condition
if(!firebase.apps.length){
  firebase.initializeApp(firebaseConfig)
}
// Export Firestore
export{ firebase };

----------------------------------------------------------------