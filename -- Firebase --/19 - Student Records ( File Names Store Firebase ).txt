----------------------------------------------------------------------------------

import React from 'react'
import { Text, View, StyleSheet, TouchableOpacity } from 'react-native'
// Files
import Z_Test_1_A from './Z_Test_1_A'
import Z_Test_2_A from './Z_Test_2_A'
// Navigation
import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
import Z_Test_3_A from './Z_Test_3_A';
import Z_Test_Part_1 from './Z_Test_Part_1';
import Z_Test_Part_2 from './Z_Test_Part_2';
import Z_Test_Part_3 from './Z_Test_Part_3';

// Constant Variable
const Stack = createStackNavigator();

export default function Z_Test_Parent_A() {
    // Main Body
    return (
        <NavigationContainer>
            <Stack.Navigator>
                {/* 1 */}
                <Stack.Screen component={Z_Test_1_A} name="Z_Test_1_A"
                    options={{ headerShown: false }} />
                {/* 2 */}
                <Stack.Screen component={Z_Test_2_A} name="Z_Test_2_A"
                    options={{ headerShown: false }} />
                {/* 3 */}
                <Stack.Screen component={Z_Test_3_A} name="Z_Test_3_A"
                    options={{ headerShown: false }} />
                {/* 4 */}
                <Stack.Screen component={Z_Test_Part_1} name="Z_Test_Part_1"
                    options={{ headerShown: false }} />
                {/* 5 */}
                <Stack.Screen component={Z_Test_Part_2} name="Z_Test_Part_2"
                    options={{ headerShown: false }} />
                {/* 6 */}
                <Stack.Screen component={Z_Test_Part_3} name="Z_Test_Part_3"
                    options={{ headerShown: false }} />
            </Stack.Navigator>
        </NavigationContainer>
    )
}

----------------------------------------------------------------------------------

import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput, Keyboard, ScrollView } from 'react-native';
import { firebase } from "../firestore";
import { useNavigation } from '@react-navigation/native';
import { useFonts } from "expo-font";

export default function Z_Test_1_A() {
    // Navigation
    const navigation = useNavigation();
// ----------- Backend Part Logic -----------
const universityRef = firebase.firestore().collection("Practice App").doc("1A - University Detail");
const [universityName, setUniversityName] = useState("");
const [campus, setCampus] = useState("");
const [intake, setIntake] = useState("");
const [courseName, setCourseName] = useState("");

const addData = () => {
    if (universityName && universityName.length > 0 && campus && intake && courseName) {
        const data = {
            universityName,
            campus,
            intake,
            courseName,
        };
        universityRef
            .set(data)  // Using set() to set data in the "My Row" document
            .then(() => {
                setUniversityName("");
                setCampus("");
                setIntake("");
                setCourseName("");
                Keyboard.dismiss();
            })
            .catch((err) => {
                alert(err);
            });
    }
};
// ----------- Backend Part Logic -----------
    // Fonts
    const [fontsLoaded, setFontsLoaded] = useState(false);
    let [loaded] = useFonts({
        Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
        Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
        Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
        HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
        KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
        KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
    });
    useEffect(() => {
        if (loaded) {
            setFontsLoaded(true);
        }
    }, [loaded]);
    if (!fontsLoaded) {
        return null;
    }
    // Main Body
    return (
        <View>
            <ScrollView>
                {/* Heading */}
                <Text style={styles.Txt1}>1 - University Detail</Text>
                {/* --- Main Body --- */}
                {/* Text Input */}
                <Text style={styles.Detail_Txt}>1 - University Name :</Text>
                <TextInput
                    placeholder=' Enter University Name '
                    onChangeText={(text) => setUniversityName(text)}
                    value={universityName}
                    keyboardType="default"
                    style={styles.Inp_1}
                />
                {/* Text Input */}
                <Text style={styles.Detail_Txt}>2 - Campus :</Text>
                <TextInput
                    placeholder=' Enter Campus '
                    onChangeText={(text) => setCampus(text)}
                    value={campus}
                    keyboardType="default"
                    style={styles.Inp_1}
                />
                {/* Text Input */}
                <Text style={styles.Detail_Txt}>3 - Intake :</Text>
                <TextInput
                    placeholder=' Enter Intake '
                    onChangeText={(text) => setIntake(text)}
                    value={intake}
                    keyboardType="default"
                    style={styles.Inp_1}
                />
                {/* Text Input */}
                <Text style={styles.Detail_Txt}>4 - Course Name as per University Website :</Text>
                <TextInput
                    placeholder=' Enter Course '
                    onChangeText={(text) => setCourseName(text)}
                    value={courseName}
                    keyboardType="default"
                    style={styles.Inp_1}
                />
                {/* ----- Button ----- */}
                {/* 1 Btn */}
                <TouchableOpacity style={styles.Btn_Parent} onPress={addData}>
                    <Text style={styles.Btn_Txt}>Add Data</Text>
                </TouchableOpacity>
                {/* 2 Btn */}
                <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_2_A")}>
                    <Text style={styles.Btn_Txt}>Move To Page 2</Text>
                </TouchableOpacity>
            </ScrollView>
        </View>
    );
}

// CSS
const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
    },
    Txt1: {
        borderWidth: 1,
        borderColor: "yellow",
        backgroundColor: "yellow",
        fontFamily: "KanitBold",
        paddingHorizontal: 10,
        paddingVertical: 10,
        textAlign: "center",
        letterSpacing: 1.5,
        fontSize: 20,
        marginVertical: 25,
    },
    Detail_Txt: {
        marginTop: 1.5,
        paddingHorizontal: 25,
        fontFamily: "Heebo",
        fontSize: 12,
        letterSpacing: 1,
    },
    Inp_1: {
        marginTop: 1,
        borderWidth: 0.5,
        borderColor: "black",
        marginHorizontal: 25,
        borderRadius: 8,
        paddingHorizontal: 10,
        letterSpacing: 1.5,
        fontSize: 12,
        fontFamily: "Kanit",
    },
    Btn_Parent: {
        paddingVertical: 2,
        backgroundColor: "red",
        marginVertical: 20,
        marginHorizontal: 15,
        borderRadius: 20,
    },
    Btn_Parent_1: {
        paddingVertical: 2,
        backgroundColor: "blue",
        marginVertical: 0,
        marginHorizontal: 15,
        borderRadius: 20,
    },
    Btn_Txt: {
        paddingVertical: 2,
        textAlign: "center",
        fontFamily: "HeeboExtra",
        fontSize: 16,
        color: "white",
        letterSpacing: 1,
    },
});

----------------------------------------------------------------------------------

import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput, Keyboard, ScrollView } from 'react-native';
import { firebase } from "../firestore";
import { useNavigation } from '@react-navigation/native';
import { useFonts } from "expo-font";

export default function Z_Test_2_A() {
  // Navigation
  const navigation = useNavigation();
  // ----------- Backend Part Logic -----------
  const personalDetailRef = firebase.firestore().collection("Practice App").doc("1B - Personal Detail");
  const [title, setTitle] = useState("");
  const [familyName, setFamilyName] = useState("");
  const [givenName, setGivenName] = useState("");
  const [countryOfBirth, setCountryOfBirth] = useState("");
  const [cityOfBirth, setCityOfBirth] = useState("");
  const [countryOfCitizenship, setCountryOfCitizenship] = useState("");
  const [dualCitizen, setDualCitizen] = useState("");
  const [email, setEmail] = useState("");
  const [firstLanguageSpoken, setFirstLanguageSpoken] = useState("");
  const [maritalStatus, setMaritalStatus] = useState("");
  const [medicalIssue, setMedicalIssue] = useState("");
  const [disability, setDisability] = useState("");
  const [crimeConviction, setCrimeConviction] = useState("");
  const [homeCountryAddress, setHomeCountryAddress] = useState("");
  const [homeCountryPhoneNumber, setHomeCountryPhoneNumber] = useState("");
  const [visaRefusal, setVisaRefusal] = useState("");
  const [refusedEntry, setRefusedEntry] = useState("");
  const addData = () => {
    const data = {
      title,
      familyName,
      givenName,
      countryOfBirth,
      cityOfBirth,
      countryOfCitizenship,
      dualCitizen,
      email,
      firstLanguageSpoken,
      maritalStatus,
      medicalIssue,
      disability,
      crimeConviction,
      homeCountryAddress,
      homeCountryPhoneNumber,
      visaRefusal,
      refusedEntry,
    };

    personalDetailRef
      .set(data)
      .then(() => {
        setTitle("");
        setFamilyName("");
        setGivenName("");
        setCountryOfBirth("");
        setCityOfBirth("");
        setCountryOfCitizenship("");
        setDualCitizen("");
        setEmail("");
        setFirstLanguageSpoken("");
        setMaritalStatus("");
        setMedicalIssue("");
        setDisability("");
        setCrimeConviction("");
        setHomeCountryAddress("");
        setHomeCountryPhoneNumber("");
        setVisaRefusal("");
        setRefusedEntry("");
        Keyboard.dismiss();
      })
      .catch((err) => {
        alert(err);
      });
  };

  // ----------- Backend Part Logic -----------

  // Fonts
  const [fontsLoaded, setFontsLoaded] = useState(false);
  let [loaded] = useFonts({
    Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
    Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
    Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
    HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
    KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
    KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
  });
  useEffect(() => {
    if (loaded) {
      setFontsLoaded(true);
    }
  }, [loaded]);
  if (!fontsLoaded) {
    return null;
  }
  // Main Body
  return (
    <View>
      <ScrollView>
        {/* Heading */}
        <Text style={styles.Txt1}>2 - Personal Detail</Text>
        {/* --- Main Body --- */}
        {/* 1 */}
        <Text style={styles.Detail_Txt}>Title</Text>
        <TextInput
          placeholder=" Enter Title "
          value={title}
          onChangeText={(text) => setTitle(text)}
          style={styles.Inp_1}
        />
        {/* 2 */}
        <Text style={styles.Detail_Txt}>Family Name as per Passport</Text>
        <TextInput
          placeholder=" Enter Family Name as per Passport "
          value={familyName}
          onChangeText={(text) => setFamilyName(text)}
          style={styles.Inp_1}
        />
        {/* 3 */}
        <Text style={styles.Detail_Txt}>Given Name as per Passport</Text>
        <TextInput
          placeholder=" Enter Given Name as per Passport "
          value={givenName}
          onChangeText={(text) => setGivenName(text)}
          style={styles.Inp_1}
        />
        {/* 4 - Date */}
        {/* 5 - Gender */}
        {/* 6 */}
        <Text style={styles.Detail_Txt}>Country Of Birth</Text>
        <TextInput
          placeholder=" Enter Country Of Birth "
          value={countryOfBirth}
          onChangeText={(text) => setCountryOfBirth(text)}
          style={styles.Inp_1}
        />
        {/* 7 */}
        <Text style={styles.Detail_Txt}>City Of Birth</Text>
        <TextInput
          placeholder=" Enter City Of Birth "
          value={cityOfBirth}
          onChangeText={(text) => setCityOfBirth(text)}
          style={styles.Inp_1}
        />
        {/* 8 */}
        <Text style={styles.Detail_Txt}>Country of Citizenship</Text>
        <TextInput
          placeholder=" Enter Country of Citizenship "
          value={countryOfCitizenship}
          onChangeText={(text) => setCountryOfCitizenship(text)}
          style={styles.Inp_1}
        />
        {/* 9 */}
        <Text style={styles.Detail_Txt}>Dual Citizen</Text>
        <TextInput
          placeholder=" Enter Dual Citizen "
          value={dualCitizen}
          onChangeText={(text) => setDualCitizen(text)}
          style={styles.Inp_1}
        />
        {/* 10 */}
        <Text style={styles.Detail_Txt}>Email Address</Text>
        <TextInput
          placeholder=" Enter Email Address "
          value={email}
          onChangeText={(text) => setEmail(text)}
          style={styles.Inp_1}
        />
        {/* 11 */}
        <Text style={styles.Detail_Txt}>First Language Spoken</Text>
        <TextInput
          placeholder=" Enter First Language Spoken "
          value={firstLanguageSpoken}
          onChangeText={(text) => setFirstLanguageSpoken(text)}
          style={styles.Inp_1}
        />
        {/* 12 */}
        <Text style={styles.Detail_Txt}>Marital Status</Text>
        <TextInput
          placeholder=" Enter Marital Status "
          value={maritalStatus}
          onChangeText={(text) => setMaritalStatus(text)}
          style={styles.Inp_1}
        />
        {/* 13 */}
        <Text style={styles.Detail_Txt}>Have any medical or health issue that may prevent you from getting your visa</Text>
        <TextInput
          placeholder=" Enter Yes / No "
          value={medicalIssue}
          onChangeText={(text) => setMedicalIssue(text)}
          style={styles.Inp_1}
        />
        {/* 14 */}
        <Text style={styles.Detail_Txt}>Do you have a disability, impairment, or long-term medical condition?</Text>
        <TextInput
          placeholder=" Enter Yes / No "
          value={disability}
          onChangeText={(text) => setDisability(text)}
          style={styles.Inp_1}
        />
        {/* 14 */}
        <Text style={styles.Detail_Txt}>Been convicted of any crime or offence in any Country</Text>
        <TextInput
          placeholder=" Enter Yes / No "
          value={crimeConviction}
          onChangeText={(text) => setCrimeConviction(text)}
          style={styles.Inp_1}
        />
        {/* 15 */}
        <Text style={styles.Detail_Txt}>Home Country Address with Suburb, City, State, Country & postcode</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={homeCountryAddress}
          onChangeText={(text) => setHomeCountryAddress(text)}
          style={styles.Inp_1}
        />
        {/* 16 */}
        <Text style={styles.Detail_Txt}>Home Country Phone Number with Area & Country Code</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={homeCountryPhoneNumber}
          onChangeText={(text) => setHomeCountryPhoneNumber(text)}
          style={styles.Inp_1}
          keyboardType="number-pad"
        />
        {/* 17 */}
        <Text style={styles.Detail_Txt}>Visa refusal of Australia</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={visaRefusal}
          onChangeText={(text) => setVisaRefusal(text)}
          style={styles.Inp_1}
        />
        {/* 18 */}
        <Text style={styles.Detail_Txt}>Been refused entry to any Country</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={refusedEntry}
          onChangeText={(text) => setRefusedEntry(text)}
          style={styles.Inp_1}
        />
        {/* ----- Button ----- */}
        {/* 1 Btn */}
        <TouchableOpacity style={styles.Btn_Parent} onPress={addData}>
          <Text style={styles.Btn_Txt}>Add Data</Text>
        </TouchableOpacity>
        {/* 2 Btn */}
        <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_3_A")}>
          <Text style={styles.Btn_Txt}>Move To Page 3</Text>
        </TouchableOpacity>
        {/* 3 Btn */}
        <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_1_A")}>
          <Text style={styles.Btn_Txt}>Move Back</Text>
        </TouchableOpacity>
      </ScrollView>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  Txt1: {
    borderWidth: 1,
    borderColor: "yellow",
    backgroundColor: "yellow",
    fontFamily: "KanitBold",
    paddingHorizontal: 10,
    paddingVertical: 10,
    textAlign: "center",
    letterSpacing: 1.5,
    fontSize: 20,
    marginVertical: 25,
  },
  Detail_Txt: {
    marginTop: 1.5,
    paddingHorizontal: 25,
    fontFamily: "Heebo",
    fontSize: 12,
    letterSpacing: 1,
  },
  Inp_1: {
    marginTop: 1,
    borderWidth: 0.5,
    borderColor: "black",
    marginHorizontal: 25,
    borderRadius: 8,
    paddingHorizontal: 10,
    letterSpacing: 1.5,
    fontSize: 12,
    fontFamily: "Kanit",
  },
  Btn_Parent: {
    paddingVertical: 2,
    backgroundColor: "red",
    marginVertical: 20,
    marginHorizontal: 15,
    borderRadius: 20,
  },
  Btn_Parent_1: {
    paddingVertical: 2,
    backgroundColor: "blue",
    marginTop: 20,
    marginBottom: 30,
    marginHorizontal: 15,
    borderRadius: 20,
  },
  Btn_Txt: {
    paddingVertical: 2,
    textAlign: "center",
    fontFamily: "HeeboExtra",
    fontSize: 16,
    color: "white",
    letterSpacing: 1,
  },
});

----------------------------------------------------------------------------------

import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput, Keyboard, ScrollView } from 'react-native';
import { firebase } from "../firestore";
import { useNavigation } from '@react-navigation/native';
import { useFonts } from "expo-font";

export default function Z_Test_3_A() {
  // Navigation
  const navigation = useNavigation();
  // ----------- Backend Part Logic -----------
  const englishAbilityRef = firebase.firestore().collection("Practice App").doc("1C - English Ability Detail");
  const [info1, setInfo1] = useState("");
  const [info3, setInfo3] = useState("");
  const [info4, setInfo4] = useState("");
  const [info5, setInfo5] = useState("");
  const [info6, setInfo6] = useState("");
  const [info7, setInfo7] = useState("");
  const [info8, setInfo8] = useState("");
  const [info9, setInfo9] = useState("");

  const addData = () => {
    const data = {
      EnglishTestName: info1,
      OverallScore: info3,
      ListeningScore: info4,
      ReadingScore: info5,
      WritingScore: info6,
      SpeakingScore: info7,
      TestReferenceNumber: info8,
      StudyInEnglish: info9,
    };

    englishAbilityRef
      .set(data)
      .then(() => {
        setInfo1("");
        setInfo3("");
        setInfo4("");
        setInfo5("");
        setInfo6("");
        setInfo7("");
        setInfo8("");
        setInfo9("");
        Keyboard.dismiss();
      })
      .catch((err) => {
        alert(err);
      });
  };

  // ----------- Backend Part Logic -----------

  // Fonts
  const [fontsLoaded, setFontsLoaded] = useState(false);
  let [loaded] = useFonts({
    Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
    Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
    Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
    HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
    KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
    KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
  });
  useEffect(() => {
    if (loaded) {
      setFontsLoaded(true);
    }
  }, [loaded]);
  if (!fontsLoaded) {
    return null;
  }
  // Main Body
  return (
    <View>
      <ScrollView>
        {/* Heading */}
        <Text style={styles.Txt1}>3 - English Ability</Text>
        {/* --- Main Body --- */}
        {/* 1 */}
        <Text style={styles.inputTitleTxt}>English Test Name (PTE/IELTS)</Text>
        <TextInput
          placeholder=" Enter English Test Name (PTE/IELTS) "
          value={info1}
          onChangeText={(text) => setInfo1(text)}
          style={styles.inputTitle}
        />
        {/* 3 */}
        <Text style={styles.inputTitleTxt}>Overall Score</Text>
        <TextInput
          placeholder=" Enter Overall Score "
          value={info3}
          onChangeText={(text) => setInfo3(text)}
          style={styles.inputTitle}
          keyboardType="number-pad"
        />
        {/* 4 */}
        <Text style={styles.inputTitleTxt}>Listening Score</Text>
        <TextInput
          placeholder=" Enter Listening Score "
          value={info4}
          onChangeText={(text) => setInfo4(text)}
          style={styles.inputTitle}
          keyboardType="number-pad"
        />
        {/* 5 */}
        <Text style={styles.inputTitleTxt}>Reading Score</Text>
        <TextInput
          placeholder=" Enter Reading Score "
          value={info5}
          onChangeText={(text) => setInfo5(text)}
          style={styles.inputTitle}
          keyboardType="number-pad"
        />
        {/* 6 */}
        <Text style={styles.inputTitleTxt}>Writing Score</Text>
        <TextInput
          placeholder=" Enter Writing Score "
          value={info6}
          onChangeText={(text) => setInfo6(text)}
          style={styles.inputTitle}
          keyboardType="number-pad"
        />
        {/* 7 */}
        <Text style={styles.inputTitleTxt}>Speaking Score</Text>
        <TextInput
          placeholder=" Enter Speaking Score "
          value={info7}
          onChangeText={(text) => setInfo7(text)}
          style={styles.inputTitle}
          keyboardType="number-pad"
        />
        {/* 8 */}
        <Text style={styles.inputTitleTxt}>Test Reference Number</Text>
        <TextInput
          placeholder=" Enter Test Reference Number "
          value={info8}
          onChangeText={(text) => setInfo8(text)}
          style={styles.inputTitle}
        />
        {/* 9 */}
        <Text style={styles.inputTitleTxt}>Have you undertaken and completed any study where English is the language of instruction? </Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info9}
          onChangeText={(text) => setInfo9(text)}
          style={styles.inputTitle}
        />
        {/* ----- Button ----- */}
        {/* 1 Btn */}
        <TouchableOpacity style={styles.Btn_Parent} onPress={addData}>
          <Text style={styles.Btn_Txt}>Add Data</Text>
        </TouchableOpacity>
        {/* 2 Btn */}
        <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_Part_1")}>
          <Text style={styles.Btn_Txt}>Move To Page 4</Text>
        </TouchableOpacity>
        {/* 3 Btn */}
        <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_1_A")}>
          <Text style={styles.Btn_Txt}>Move Home</Text>
        </TouchableOpacity>
      </ScrollView>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  Txt1: {
    borderWidth: 1,
    borderColor: "yellow",
    backgroundColor: "yellow",
    fontFamily: "KanitBold",
    paddingHorizontal: 10,
    paddingVertical: 10,
    textAlign: "center",
    letterSpacing: 1.5,
    fontSize: 20,
    marginVertical: 25,
  },
  inputTitleTxt: {
    marginTop: 1.5,
    paddingHorizontal: 25,
    fontFamily: "Heebo",
    fontSize: 12,
    letterSpacing: 1,
  },
  inputTitle: {
    marginTop: 1,
    borderWidth: 0.5,
    borderColor: "black",
    marginHorizontal: 25,
    borderRadius: 8,
    paddingHorizontal: 10,
    letterSpacing: 1.5,
    fontSize: 12,
    fontFamily: "Kanit",
  },
  Btn_Parent: {
    paddingVertical: 2,
    backgroundColor: "red",
    marginVertical: 20,
    marginHorizontal: 15,
    borderRadius: 20,
  },
  Btn_Parent_1: {
    paddingVertical: 2,
    backgroundColor: "blue",
    marginTop: 20,
    marginBottom: 30,
    marginHorizontal: 15,
    borderRadius: 20,
  },
  Btn_Txt: {
    paddingVertical: 2,
    textAlign: "center",
    fontFamily: "HeeboExtra",
    fontSize: 16,
    color: "white",
    letterSpacing: 1,
  },
});

----------------------------------------------------------------------------------

import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput, Keyboard, ScrollView } from 'react-native';
import { firebase } from "../firestore";
import { useNavigation } from '@react-navigation/native';
import { useFonts } from "expo-font";

export default function Z_Test_Part_1() {
  // Navigation
  const navigation = useNavigation();
  // ----------- Backend Part Logic -----------
  const educationDetailRef = firebase.firestore().collection("Practice App").doc("1D - Education Detail");
  const [info1, setInfo1] = useState("");
  const [info2, setInfo2] = useState("");
  const [info3, setInfo3] = useState("");
  const [info4, setInfo4] = useState("");
  const [info5, setInfo5] = useState("");
  const [info6, setInfo6] = useState("");
  const [info7, setInfo7] = useState("");
  const [info8, setInfo8] = useState("");
  const [info9, setInfo9] = useState("");
  const [info10, setInfo10] = useState("");

  const addData = () => {
    const data = {
      HighSchoolYear12Equivalent: info1,
      SchoolName: info2,
      ProgramName: info3,
      Country: info4,
      CourseLengthMedium: info5,
      MonthYearStarted: info6,
      MonthYearFinished: info7,
      CompleteIncompleteWithdrawn: info8,
      IfIncompleteThenWhenFinish: info9,
      IfIncompleteThenResultAvailableDate: info10,
    };

    educationDetailRef
      .set(data)
      .then(() => {
        setInfo1("");
        setInfo2("");
        setInfo3("");
        setInfo4("");
        setInfo5("");
        setInfo6("");
        setInfo7("");
        setInfo8("");
        setInfo9("");
        setInfo10("");
        Keyboard.dismiss();
      })
      .catch((err) => {
        alert(err);
      });
  };

  // ----------- Backend Part Logic -----------

  // Fonts
  const [fontsLoaded, setFontsLoaded] = useState(false);
  let [loaded] = useFonts({
    Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
    Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
    Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
    HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
    KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
    KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
  });
  useEffect(() => {
    if (loaded) {
      setFontsLoaded(true);
    }
  }, [loaded]);
  if (!fontsLoaded) {
    return null;
  }
  // Main Body
  return (
    <View>
      <ScrollView>
        {/* Heading */}
        <Text style={styles.Txt1}>4 - Education Detail</Text>
        {/* --- Main Body --- */}
        {/* 1 */}
        <Text style={styles.inputTitleTxt}>High School / Year 12 / Equivalent</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info1}
          onChangeText={(text) => setInfo1(text)}
          style={styles.inputTitle}
        />
        {/* 2 */}
        <Text style={styles.inputTitleTxt}>School Name</Text>
        <TextInput
          placeholder=" Enter School Name "
          value={info2}
          onChangeText={(text) => setInfo2(text)}
          style={styles.inputTitle}
        />
        {/* 3 */}
        <Text style={styles.inputTitleTxt}>Program Name</Text>
        <TextInput
          placeholder=" Enter Program Name "
          value={info3}
          onChangeText={(text) => setInfo3(text)}
          style={styles.inputTitle}
        />
        {/* 4 */}
        <Text style={styles.inputTitleTxt}>Country</Text>
        <TextInput
          placeholder=" Enter Country "
          value={info4}
          onChangeText={(text) => setInfo4(text)}
          style={styles.inputTitle}
        />
        {/* 5 */}
        <Text style={styles.inputTitleTxt}>Course Length, Medium (Language) of Instruction </Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info5}
          onChangeText={(text) => setInfo5(text)}
          style={styles.inputTitle}
        />
        {/* 6 */}
        <Text style={styles.inputTitleTxt}>Month / Year Started</Text>
        <TextInput
          placeholder=" Enter Month / Year Started "
          value={info6}
          onChangeText={(text) => setInfo6(text)}
          style={styles.inputTitle}
        />
        {/* 7 */}
        <Text style={styles.inputTitleTxt}>Month / Year Finished</Text>
        <TextInput
          placeholder=" Enter Month / Year Finished "
          value={info7}
          onChangeText={(text) => setInfo7(text)}
          style={styles.inputTitle}
        />
        {/* 8 */}
        <Text style={styles.inputTitleTxt}>Complete or Incomplete or Withdrawn</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info8}
          onChangeText={(text) => setInfo8(text)}
          style={styles.inputTitle}
        />
        {/* 9 */}
        <Text style={styles.inputTitleTxt}>If incomplete then when will finish</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info9}
          onChangeText={(text) => setInfo9(text)}
          style={styles.inputTitle}
        />
        {/* 10 */}
        <Text style={styles.inputTitleTxt}>If incomplete then result available Date</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info10}
          onChangeText={(text) => setInfo10(text)}
          style={styles.inputTitle}
        />
        {/* ----- Button ----- */}
        {/* 1 Btn */}
        <TouchableOpacity style={styles.Btn_Parent} onPress={addData}>
          <Text style={styles.Btn_Txt}>Add Data</Text>
        </TouchableOpacity>
        {/* 2 Btn */}
        <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_Part_2")}>
          <Text style={styles.Btn_Txt}>Move To Page 5</Text>
        </TouchableOpacity>
        {/* 3 Btn */}
        <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_1_A")}>
          <Text style={styles.Btn_Txt}>Move Home</Text>
        </TouchableOpacity>
      </ScrollView>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  Txt1: {
    borderWidth: 1,
    borderColor: "yellow",
    backgroundColor: "yellow",
    fontFamily: "KanitBold",
    paddingHorizontal: 10,
    paddingVertical: 10,
    textAlign: "center",
    letterSpacing: 1.5,
    fontSize: 20,
    marginVertical: 25,
  },
  inputTitleTxt: {
    marginTop: 1.5,
    paddingHorizontal: 25,
    fontFamily: "Heebo",
    fontSize: 12,
    letterSpacing: 1,
  },
  inputTitle: {
    marginTop: 1,
    borderWidth: 0.5,
    borderColor: "black",
    marginHorizontal: 25,
    borderRadius: 8,
    paddingHorizontal: 10,
    letterSpacing: 1.5,
    fontSize: 12,
    fontFamily: "Kanit",
  },
  Btn_Parent: {
    paddingVertical: 2,
    backgroundColor: "red",
    marginVertical: 20,
    marginHorizontal: 15,
    borderRadius: 20,
  },
  Btn_Parent_1: {
    paddingVertical: 2,
    backgroundColor: "blue",
    marginTop: 20,
    marginBottom: 30,
    marginHorizontal: 15,
    borderRadius: 20,
  },
  Btn_Txt: {
    paddingVertical: 2,
    textAlign: "center",
    fontFamily: "HeeboExtra",
    fontSize: 16,
    color: "white",
    letterSpacing: 1,
  },
});

----------------------------------------------------------------------------------

import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput, Keyboard, ScrollView } from 'react-native';
import { firebase } from "../firestore";
import { useNavigation } from '@react-navigation/native';
import { useFonts } from "expo-font";

export default function Z_Test_Part_2() {
  // Navigation
  const navigation = useNavigation();
  // ----------- Backend Part Logic -----------
  const additionalDetailRef = firebase.firestore().collection("Practice App").doc("1E - Additional Detail");
  const [info1, setInfo1] = useState("");
  const [info2, setInfo2] = useState("");
  const [info3, setInfo3] = useState("");
  const [info4, setInfo4] = useState("");

  const addData = () => {
    const data = {
      FathersHighestQualification: info1,
      MothersHighestQualification: info2,
      GrantedScholarshipBefore: info3,
      ApplyingForScholarship: info4,
    };

    additionalDetailRef
      .set(data)
      .then(() => {
        setInfo1("");
        setInfo2("");
        setInfo3("");
        setInfo4("");
        Keyboard.dismiss();
      })
      .catch((err) => {
        alert(err);
      });
  };

  // ----------- Backend Part Logic -----------

  // Fonts
  const [fontsLoaded, setFontsLoaded] = useState(false);
  let [loaded] = useFonts({
    Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
    Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
    Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
    HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
    KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
    KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
  });
  useEffect(() => {
    if (loaded) {
      setFontsLoaded(true);
    }
  }, [loaded]);
  if (!fontsLoaded) {
    return null;
  }
  // Main Body
  return (
    <View>
      <ScrollView>
        {/* Heading */}
        <Text style={styles.Txt1}>5 - Additional Detail</Text>
        {/* --- Main Body --- */}
        {/* 1 */}
        <Text style={styles.inputTitleTxt}>Father's Highest Qualification</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info1}
          onChangeText={(text) => setInfo1(text)}
          style={styles.inputTitle}
        />
        {/* 2 */}
        <Text style={styles.inputTitleTxt}>Mother's Highest Qualification</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info2}
          onChangeText={(text) => setInfo2(text)}
          style={styles.inputTitle}
        />
        {/* 3 */}
        <Text style={styles.inputTitleTxt}>Have you granted Scholarship (Government or Private) before</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info3}
          onChangeText={(text) => setInfo3(text)}
          style={styles.inputTitle}
        />
        {/* 4 */}
        <Text style={styles.inputTitleTxt}>Are you applying for Scholarship (Government or Private)</Text>
        <TextInput
          placeholder=" Enter Answer "
          value={info4}
          onChangeText={(text) => setInfo4(text)}
          style={styles.inputTitle}
        />
        {/* ----- Button ----- */}
        {/* 1 Btn */}
        <TouchableOpacity style={styles.Btn_Parent} onPress={addData}>
          <Text style={styles.Btn_Txt}>Add Data</Text>
        </TouchableOpacity>
        {/* 2 Btn */}
        <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_Part_3")}>
          <Text style={styles.Btn_Txt}>Move To Last Page</Text>
        </TouchableOpacity>
        {/* 3 Btn */}
        <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_1_A")}>
          <Text style={styles.Btn_Txt}>Move Home</Text>
        </TouchableOpacity>
      </ScrollView>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  Txt1: {
    borderWidth: 1,
    borderColor: "yellow",
    backgroundColor: "yellow",
    fontFamily: "KanitBold",
    paddingHorizontal: 10,
    paddingVertical: 10,
    textAlign: "center",
    letterSpacing: 1.5,
    fontSize: 20,
    marginVertical: 25,
  },
  inputTitleTxt: {
    marginTop: 1.5,
    paddingHorizontal: 25,
    fontFamily: "Heebo",
    fontSize: 12,
    letterSpacing: 1,
  },
  inputTitle: {
    marginTop: 1,
    borderWidth: 0.5,
    borderColor: "black",
    marginHorizontal: 25,
    borderRadius: 8,
    paddingHorizontal: 10,
    letterSpacing: 1.5,
    fontSize: 12,
    fontFamily: "Kanit",
  },
  Btn_Parent: {
    paddingVertical: 2,
    backgroundColor: "red",
    marginVertical: 20,
    marginHorizontal: 15,
    borderRadius: 20,
  },
  Btn_Parent_1: {
    paddingVertical: 2,
    backgroundColor: "blue",
    marginTop: 20,
    marginBottom: 30,
    marginHorizontal: 15,
    borderRadius: 20,
  },
  Btn_Txt: {
    paddingVertical: 2,
    textAlign: "center",
    fontFamily: "HeeboExtra",
    fontSize: 16,
    color: "white",
    letterSpacing: 1,
  },
});

----------------------------------------------------------------------------------

import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput, Keyboard, ScrollView } from 'react-native';
import { firebase } from "../firestore";
import { useNavigation } from '@react-navigation/native';
import { useFonts } from "expo-font";

export default function Z_Test_Part_3() {
    // Navigation
    const navigation = useNavigation();
    // ----------- Backend Part Logic -----------
    const bachelorDetailRef = firebase.firestore().collection("Practice App").doc("1F - Bachelor Detail");
    const [info1, setInfo1] = useState("");
    const [info2, setInfo2] = useState("");
    const [info3, setInfo3] = useState("");
    const [info4, setInfo4] = useState("");
    const [info5, setInfo5] = useState("");
    const [info6, setInfo6] = useState("");
    const [info7, setInfo7] = useState("");
    const [info8, setInfo8] = useState("");
    const [info9, setInfo9] = useState("");
    const [info10, setInfo10] = useState("");
    const [info11, setInfo11] = useState("");

    const addData = () => {
        const data = {
            UniversityName: info1,
            ProgramName: info2,
            CourseLengthMedium: info3,
            Country: info4,
            MonthYearStarted: info5,
            MonthYearFinished: info6,
            CompleteIncompleteWithdrawn: info7,
            IfIncompleteThenWhenFinish: info8,
            IfIncompleteThenResultAvailableDate: info9,
            ApplyingForCredits: info10,
            CompletedMastersDegree: info11,
        };

        bachelorDetailRef
            .set(data)
            .then(() => {
                setInfo1("");
                setInfo2("");
                setInfo3("");
                setInfo4("");
                setInfo5("");
                setInfo6("");
                setInfo7("");
                setInfo8("");
                setInfo9("");
                setInfo10("");
                setInfo11("");
                Keyboard.dismiss();
            })
            .catch((err) => {
                alert(err);
            });
    };

    // ----------- Backend Part Logic -----------

    // Fonts
    const [fontsLoaded, setFontsLoaded] = useState(false);
    let [loaded] = useFonts({
        Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
        Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
        Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
        HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
        KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
        KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
    });
    useEffect(() => {
        if (loaded) {
            setFontsLoaded(true);
        }
    }, [loaded]);
    if (!fontsLoaded) {
        return null;
    }
    // Main Body
    return (
        <View>
            <ScrollView>
                {/* Heading */}
                <Text style={styles.Txt1}>6 - Bachelor Detail</Text>
                {/* --- Main Body --- */}
                {/* 1 */}
                <Text style={styles.inputTitleTxt}>University Name</Text>
                <TextInput
                    placeholder=" Enter University Name "
                    value={info1}
                    onChangeText={(text) => setInfo1(text)}
                    style={styles.inputTitle}
                />
                {/* 2 */}
                <Text style={styles.inputTitleTxt}>Program Name</Text>
                <TextInput
                    placeholder=" Enter Program Name "
                    value={info2}
                    onChangeText={(text) => setInfo2(text)}
                    style={styles.inputTitle}
                />
                {/* 3 */}
                <Text style={styles.inputTitleTxt}>Course Length - Medium (Language) of Instruction</Text>
                <TextInput
                    placeholder=" Enter Answer "
                    value={info3}
                    onChangeText={(text) => setInfo3(text)}
                    style={styles.inputTitle}
                />
                {/* 4 */}
                <Text style={styles.inputTitleTxt}>Country</Text>
                <TextInput
                    placeholder=" Enter Country "
                    value={info4}
                    onChangeText={(text) => setInfo4(text)}
                    style={styles.inputTitle}
                />
                {/* 5 */}
                <Text style={styles.inputTitleTxt}>Month / Year Started</Text>
                <TextInput
                    placeholder=" Enter Month / Year Started "
                    value={info5}
                    onChangeText={(text) => setInfo5(text)}
                    style={styles.inputTitle}
                />
                {/* 6 */}
                <Text style={styles.inputTitleTxt}>Month / Year Finished</Text>
                <TextInput
                    placeholder=" Enter Month / Year Finished "
                    value={info6}
                    onChangeText={(text) => setInfo6(text)}
                    style={styles.inputTitle}
                />
                {/* 7 */}
                <Text style={styles.inputTitleTxt}>Complete or Incomplete or Withdrawn</Text>
                <TextInput
                    placeholder=" Enter Answer "
                    value={info7}
                    onChangeText={(text) => setInfo7(text)}
                    style={styles.inputTitle}
                />
                {/* 8 */}
                <Text style={styles.inputTitleTxt}>If incomplete then when will finish</Text>
                <TextInput
                    placeholder=" Enter Answer "
                    value={info8}
                    onChangeText={(text) => setInfo8(text)}
                    style={styles.inputTitle}
                />
                {/* 9 */}
                <Text style={styles.inputTitleTxt}>If incomplete then result available Date</Text>
                <TextInput
                    placeholder=" Enter Answer "
                    value={info9}
                    onChangeText={(text) => setInfo9(text)}
                    style={styles.inputTitle}
                />
                {/* 10 */}
                <Text style={styles.inputTitleTxt}>Are you applying for Credits base on this study</Text>
                <TextInput
                    placeholder=" Enter Answer "
                    value={info10}
                    onChangeText={(text) => setInfo10(text)}
                    style={styles.inputTitle}
                />
                {/* 11 */}
                <Text style={styles.inputTitleTxt}>Have you completed a master's degree?</Text>
                <TextInput
                    placeholder=" Enter Answer "
                    value={info11}
                    onChangeText={(text) => setInfo11(text)}
                    style={styles.inputTitle}
                />
                {/* ----- Button ----- */}
                {/* 1 Btn */}
                <TouchableOpacity style={styles.Btn_Parent} onPress={addData}>
                    <Text style={styles.Btn_Txt}>Add Data</Text>
                </TouchableOpacity>
                {/* 2 Btn */}
                <TouchableOpacity style={styles.Btn_Parent_1} onPress={() => navigation.navigate("Z_Test_1_A")}>
                    <Text style={styles.Btn_Txt}>Move Home</Text>
                </TouchableOpacity>
            </ScrollView>
        </View>
    );
}

// CSS
const styles = StyleSheet.create({
    container: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
    },
    Txt1: {
        borderWidth: 1,
        borderColor: "yellow",
        backgroundColor: "yellow",
        fontFamily: "KanitBold",
        paddingHorizontal: 10,
        paddingVertical: 10,
        textAlign: "center",
        letterSpacing: 1.5,
        fontSize: 20,
        marginVertical: 25,
    },
    inputTitleTxt: {
        marginTop: 1.5,
        paddingHorizontal: 25,
        fontFamily: "Heebo",
        fontSize: 12,
        letterSpacing: 1,
    },
    inputTitle: {
        marginTop: 1,
        borderWidth: 0.5,
        borderColor: "black",
        marginHorizontal: 25,
        borderRadius: 8,
        paddingHorizontal: 10,
        letterSpacing: 1.5,
        fontSize: 12,
        fontFamily: "Kanit",
    },
    Btn_Parent: {
        paddingVertical: 2,
        backgroundColor: "red",
        marginVertical: 20,
        marginHorizontal: 15,
        borderRadius: 20,
    },
    Btn_Parent_1: {
        paddingVertical: 2,
        backgroundColor: "blue",
        marginTop: 20,
        marginBottom: 30,
        marginHorizontal: 15,
        borderRadius: 20,
    },
    Btn_Txt: {
        paddingVertical: 2,
        textAlign: "center",
        fontFamily: "HeeboExtra",
        fontSize: 16,
        color: "white",
        letterSpacing: 1,
    },
});

----------------------------------------------------------------------------------



----------------------------------------------------------------------------------

