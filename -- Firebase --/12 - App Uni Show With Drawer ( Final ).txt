--------------- Z_Test_Parent_A.js ---------------

import React from 'react'
import { Text, View, StyleSheet, TouchableOpacity } from 'react-native'
// Files
import Z_Test_1_A from './Z_Test_1_A'
import Z_Test_2_A from './Z_Test_2_A'
// Navigation
import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
import Z_Test_3_A from './Z_Test_3_A';

// Constant Variable
const Stack = createStackNavigator();

export default function Z_Test_Parent_A() {
    // Main Body
    return (
        <NavigationContainer>
            <Stack.Navigator>
                {/* 1 */}
                <Stack.Screen component={Z_Test_1_A} name="Z_Test_1_A"
                    options={{ headerShown: false }} />
                {/* 2 */}
                <Stack.Screen component={Z_Test_2_A} name="Z_Test_2_A"
                    options={{ headerShown: false }} />
                {/* 3 */}
                <Stack.Screen component={Z_Test_3_A} name="Z_Test_3_A"
                    options={{ headerShown: false }} />
            </Stack.Navigator>
        </NavigationContainer>
    )
}

--------------- Z_Test_1_A.js ---------------

import React, { useState, useEffect } from "react";
import {
    TouchableOpacity,
    View,
    Text,
    Image,
    StyleSheet,
    FlatList
} from "react-native";
import { useNavigation } from "@react-navigation/native";
import { firebase } from "../firestore";
// Fonts Header File
import { useFonts } from "expo-font";
import { FontAwesome5, AntDesign, FontAwesome } from '@expo/vector-icons';

export default function Z_Test_1_A() {
    // 0 - Navigation Constant
    const navigation = useNavigation();
    // 1 - useState
    const [notes, setNotes] = useState([]);
    // 2 - useEffect ( Fetch Data From Firestore Firebase )
    useEffect(() => {
        firebase
            .firestore()
            .collection("1 - Add University")
            .onSnapshot((querySnapshot) => {
                const newNotes = [];
                querySnapshot.forEach((doc) => {
                    const { name1, name2, name3, name4, name5, MyImage } = doc.data();
                    newNotes.push({ name1, name2, name3, name4, name5, MyImage });
                });
                setNotes(newNotes);
            });
    }, []);
    // ---------- Font Family ----------
    // 1 - useState
    const [fontsLoaded, setFontsLoaded] = useState(false);
    // Expo Font Logic
    let [loaded] = useFonts({
        Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
        Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
        Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
        HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
        KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
        KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
    });
    // It Will Load Font
    useEffect(() => {
        if (loaded) {
            setFontsLoaded(true);
        }
    }, [loaded]);
    // It Tells If Font Is Loaded Or If Not Loaded Then Nothing Will Show,
    if (!fontsLoaded) {
        return null;
    }
    // ---------- Font Family ----------
    // Main Body
    return (
        <View style={styles.container}>
            {/* Start */}
            {/* Flash List */}
            <FlatList
                data={notes}
                numColumns={1}
                estimatedItemSize={100}
                renderItem={({ item }) => (
                    // Display Area
                    <TouchableOpacity style={styles.box} onPress={() =>
                        navigation.navigate("Z_Test_2_A", {
                            item: {
                                MyImage: item.MyImage,
                                name1: item.name1,
                                name2: item.name2,
                                name3: item.name3,
                                name4: item.name4,
                                name5: item.name5,
                            },
                        })
                    }>
                        {/* Box Border */}
                        <View style={styles.box_2}>
                            {/* Row 1 */}
                            <View style={styles.in_box}>
                                {/* 1 - Image */}
                                <Image
                                    source={{ uri: item.MyImage }}
                                    style={styles.img_fir}
                                />
                                {/* 2 - Title */}
                                <Text
                                    style={styles.sec}>
                                    {item.name1.substring(0, 15)}
                                </Text>
                            </View>
                            {/* Row 2 */}
                            <View style={styles.third}>
                                {/* 1 - Text */}
                                <Text style={styles.third_1}><FontAwesome5 name="book" size={12.5} color="#EB2F06" />  Courses</Text>
                                {/* 2 - Title */}
                                <Text style={styles.third_2}>{item.name3.substring(0, 20)}</Text>
                            </View>
                            {/* Row 3 */}
                            <View style={styles.forth}>
                                {/* 1 */}
                                <View style={styles.forth_1}>
                                    <Text style={styles.for_1}><FontAwesome5 name="money-bill" size={12.5} color="#EB2F06" />  Semester Fee</Text>
                                    <Text style={styles.for_2}>{item.name4.substring(0, 15)} $</Text>
                                </View>
                                {/* 2 */}
                                <View style={styles.forth_1}>
                                    <Text style={styles.for_1}><AntDesign name="clockcircle" size={12.5} color="#EB2F06" />  Duration</Text>
                                    <Text style={styles.for_22}>{item.name5}</Text>
                                </View>
                            </View>
                        </View>
                    </TouchableOpacity>
                )}
            />
            {/* End */}
        </View>
    );
}

// CSS
const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: "yellow",
        paddingTop: 30,
    },
    box: {
        width: '88%',
        borderRadius: 17,
        // borderWidth: 1,
        borderColor: "black",
        alignSelf: 'center',
        marginTop: 16,
        // marginBottom: 4,
        alignItems: 'center',
        flexDirection: 'row',
        elevation: 15,
        // backgroundColor: "#FCDFD8",
        backgroundColor: "#FCBBAC",
        // backgroundColor: "#FED1C7",
        paddingHorizontal: 5,
        paddingVertical: 6,
    },
    box_2: {
        width: "100%",
        flexDirection: "column",
        paddingVertical: 7,
    },
    in_box: {
        // borderWidth: 0.1,
        width: "100%",
        height: 52,
        flexDirection: "row",
        paddingVertical: 2,
    },
    img_fir: {
        // borderWidth: 1,
        // borderColor: "black",
        width: "23%",
        height: '100%',
        marginLeft: 9,
        borderRadius: 7,
    },
    sec: {
        letterSpacing: 2,
        textAlign: "center",
        fontFamily: "KanitBold",
        width: "70%",
        marginLeft: 10,
        color: "black",
        marginTop: 11,
        // borderWidth: 1,
        //   height: 20,
        fontSize: 16,
        textTransform: "uppercase",
        paddingHorizontal: 2,
    },
    third: {
        marginTop: 10.5,
        // borderWidth: 1,
        width: "100%",
        // height: 48,
        flexDirection: "column",
    },
    third_1: {
        letterSpacing: 0.6,
        textAlign: "left",
        fontFamily: "Kanit",
        // color: "#636e72",
        marginHorizontal: 10,
        fontSize: 13.5,
        paddingVertical: 3.2,
        paddingHorizontal: 7.5,
        backgroundColor: "#dff9fb",
        borderRadius: 7,
        width: "29%",
        marginTop: 5,
    },
    third_2: {
        letterSpacing: 1.6,
        textAlign: "left",
        fontFamily: "Heebo",
        marginHorizontal: 12,
        color: "black",
        marginTop: 2,
        // borderWidth: 1,
        fontSize: 14,
        paddingVertical: 4.5,
        paddingHorizontal: 2,
        marginBottom: 2,
    },
    forth: {
        // borderWidth: 1,
        marginTop: 5,
        paddingVertical: 1,
        flexDirection: "row",
        justifyContent: "space-between",
        paddingHorizontal: 10,
    },
    forth_1: {
        // borderWidth: 0.5,
        paddingVertical: 1,
    },
    for_1: {
        // color: "#636e72",
        fontSize: 13.5,
        letterSpacing: 0.6,
        fontFamily: "Kanit",
        paddingVertical: 3.2,
        paddingHorizontal: 7.5,
        backgroundColor: "#dff9fb",
        borderRadius: 7,
    },
    for_2: {
        // color: "#009432",
        letterSpacing: 1.5,
        fontSize: 14,
        fontFamily: "Heebo",
        marginTop: 6,
        paddingHorizontal: 4.5,
    },
    for_22: {
        // color: "#e84118",
        letterSpacing: 1.5,
        fontSize: 14,
        fontFamily: "Heebo",
        marginTop: 6,
        paddingHorizontal: 4,
    },
});  

--------------- Z_Test_2_A.js ---------------

import React, { useState, useEffect } from "react";
import { View, Text, StyleSheet, Image } from "react-native";
import { useNavigation } from "@react-navigation/native";
import { useFonts } from "expo-font";
import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';

import Z_Test_Part_1 from "./Z_Test_Part_1";
import Z_Test_Part_2 from "./Z_Test_Part_2";

const top = createMaterialTopTabNavigator();

export default function Z_Test_2_A({ route }) {

  const navigation = useNavigation();
  const [noteImage, setNoteImage] = useState(route.params.item.MyImage);
  const [noteTitle, setNoteTitle] = useState(route.params.item.name1);
  const [noteText, setNoteText] = useState(route.params.item.name2);
  const [noteRoom, setNoteRoom] = useState(route.params.item.name3);
  const [noteAmount, setNoteAmount] = useState(route.params.item.name4);
  const [noteDuration, setNoteDuration] = useState(route.params.item.name5);
  // ---------- Font Family ----------
  // 1 - useState
  const [fontsLoaded, setFontsLoaded] = useState(false);
  // Expo Font Logic
  let [loaded] = useFonts({
    Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
    Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
    Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
    HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
    KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
    KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
  });

  useEffect(() => {
    if (loaded) {
      setFontsLoaded(true);
    }
  }, [loaded]);

  if (!fontsLoaded) {
    return null;
  }

  return (
    <View style={styles.container}>
      <Image source={{ uri: noteImage }} style={styles.image} />
      <Text style={styles.label}>University: </Text>
      <Text style={styles.text}>{noteTitle}</Text>

      {/* Drawer */}
      <top.Navigator>
        {/* Screen 1 */}
        <top.Screen
          name="Z_Test_Part_1"
          component={Z_Test_Part_1}
          initialParams={{
            noteTitle,
            noteText,
            // Add other data to pass here
          }}
          options={{
            tabBarLabel: "Overview",
            tabBarLabelStyle: {
              fontFamily: "Heebo",
              letterSpacing: 0.8,
            },
            tabBarInactiveTintColor: "grey",
            tabBarIndicatorStyle: {
              backgroundColor: "#EB2F06",
              borderWidth: 1.4,
              borderColor: "#EB2F06",
            },
            tabBarActiveTintColor: "#EB2F06",
          }}
        />

        {/* Screen 2 */}
        <top.Screen
          name="Z_Test_Part_2"
          component={Z_Test_Part_2}
          initialParams={{
            noteRoom,
            noteAmount,
            noteDuration,
            // Add other data to pass here
          }}
          options={{
            tabBarLabel: "Admission",
            tabBarLabelStyle: {
              fontFamily: "Heebo",
              letterSpacing: 0.8,
            },
            tabBarInactiveTintColor: "grey",
            tabBarIndicatorStyle: {
              backgroundColor: "#EB2F06",
              borderWidth: 1.4,
              borderColor: "#EB2F06",
            },
            tabBarActiveTintColor: "#EB2F06",
          }}
        />
      </top.Navigator>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "pink",
    paddingHorizontal: 20,
    paddingVertical: 30,
  },
  label: {
    fontSize: 16,
    color: "black",
    marginBottom: 5,
  },
  text: {
    borderWidth: 0.3,
    fontSize: 15,
    paddingVertical: 7,
    paddingHorizontal: 12,
    marginVertical: 10,
    textAlign: "center",
    letterSpacing: 2,
    fontFamily: "KanitBold",
  },
  image: {
    borderColor: "white",
    borderWidth: 1,
    width: "50%",
    height: 105,
    marginVertical: 0,
    marginLeft: 70,
  },
});

--------------- Z_Test_Part_1.js ---------------

import React, { useState, useEffect } from "react";
import { View, Text, StyleSheet } from "react-native";
import { useNavigation } from "@react-navigation/native";
import { useRoute } from "@react-navigation/native";
import { useFonts } from "expo-font";

export default function Z_Test_Part_1() {
  const navigation = useNavigation();
  const route = useRoute();

  // ---------- Font Family ----------
  // 1 - useState
  const [fontsLoaded, setFontsLoaded] = useState(false);
  // Expo Font Logic
  let [loaded] = useFonts({
    Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
    Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
    Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
    HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
    KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
    KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
  });
  // It Will Load Font
  useEffect(() => {
    if (loaded) {
      setFontsLoaded(true);
    }
  }, [loaded]);
  // It Tells If Font Is Loaded Or If Not Loaded Then Nothing Will Show,
  if (!fontsLoaded) {
    return null;
  }
  // ---------- Font Family ----------
  // Main Body  
  return (
    <View style={styles.container}>
      <Text>Overview - ( Part 1 )</Text>
      {/* Showing Data */}
      <Text style={styles.MyTxt}>University: {route.params.noteTitle}</Text>
      <Text style={styles.MyTxt}>Basic Overview: {route.params.noteText}</Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "aqua",
    paddingHorizontal: 20,
    paddingVertical: 30,
  },
  MyTxt: {
    // borderWidth: 0.5,
    textAlign: "center",
    fontSize: 15, 
    paddingTop: 40,
    fontFamily: "Heebo"   
  },
});

--------------- Z_Test_Part_2.js ---------------

import React, { useState, useEffect } from "react";
import {
  View,
  Text,
  StyleSheet,
  Image,
  TouchableOpacity,
} from "react-native";
import { useNavigation } from "@react-navigation/native";
import { useRoute } from "@react-navigation/native";
import { useFonts } from "expo-font";

export default function Z_Test_Part_2() {
  // Navigation
  const navigation = useNavigation();
  const route = useRoute();
  // ---------- Font Family ----------
  // 1 - useState
  const [fontsLoaded, setFontsLoaded] = useState(false);
  // Expo Font Logic
  let [loaded] = useFonts({
    Archivo: require("../../assets/fonts/My_Soul/ArchivoBlack-Regular.ttf"),
    Kanit: require("../../assets/fonts/My_Soul/Kanit-Light.ttf"),
    Heebo: require("../../assets/fonts/My_Soul/Heebo-Medium.ttf"),
    HeeboExtra: require("../../assets/fonts/My_Soul/Heebo-ExtraBold.ttf"),
    KanitBold: require("../../assets/fonts/My_Soul/Kanit-Bold.ttf"),
    KanitBlack: require("../../assets/fonts/My_Soul/Kanit-Black.ttf"),
  });
  // It Will Load Font
  useEffect(() => {
    if (loaded) {
      setFontsLoaded(true);
    }
  }, [loaded]);
  // It Tells If Font Is Loaded Or If Not Loaded Then Nothing Will Show,
  if (!fontsLoaded) {
    return null;
  }
  // ---------- Font Family ----------
  // Main Body
  return (
    <View style={styles.container}>
      <Text>Admission - ( Part 2 ) </Text>
      {/* Showing Data */}
      <Text style={styles.MyTxt}>Courses Offered: {route.params.noteRoom}</Text>
      <Text style={styles.MyTxt}>Semester Fee: {route.params.noteAmount}</Text>
      <Text style={styles.MyTxt}>Degree Duration: {route.params.noteDuration}</Text>
    </View>
  );
}

// CSS
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "yellow",
    paddingHorizontal: 20,
    paddingVertical: 30,
  },
  MyTxt: {
    // borderWidth: 0.5,
    textAlign: "center",
    fontSize: 15,
    paddingTop: 40,
    fontFamily: "Heebo"
  },
});

--------------------------------------------------------------------------------